// Generated by view binder compiler. Do not edit!
package com.example.sportxperience_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sportxperience_android.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEventsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton cercarFiltre;

  @NonNull
  public final MaterialButton evGratuit;

  @NonNull
  public final MaterialButton evPagament;

  @NonNull
  public final MaterialButton evTotsDos;

  @NonNull
  public final RecyclerView recyclerEvents;

  @NonNull
  public final MaterialButton resetFilter;

  @NonNull
  public final TextInputEditText tieDataFiltre;

  @NonNull
  public final TextInputEditText tilCiutat;

  @NonNull
  public final TextInputLayout tilDataFiltre;

  @NonNull
  public final TextInputEditText tilEsport;

  @NonNull
  public final MaterialButtonToggleGroup toggleButton;

  private FragmentEventsBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton cercarFiltre, @NonNull MaterialButton evGratuit,
      @NonNull MaterialButton evPagament, @NonNull MaterialButton evTotsDos,
      @NonNull RecyclerView recyclerEvents, @NonNull MaterialButton resetFilter,
      @NonNull TextInputEditText tieDataFiltre, @NonNull TextInputEditText tilCiutat,
      @NonNull TextInputLayout tilDataFiltre, @NonNull TextInputEditText tilEsport,
      @NonNull MaterialButtonToggleGroup toggleButton) {
    this.rootView = rootView;
    this.cercarFiltre = cercarFiltre;
    this.evGratuit = evGratuit;
    this.evPagament = evPagament;
    this.evTotsDos = evTotsDos;
    this.recyclerEvents = recyclerEvents;
    this.resetFilter = resetFilter;
    this.tieDataFiltre = tieDataFiltre;
    this.tilCiutat = tilCiutat;
    this.tilDataFiltre = tilDataFiltre;
    this.tilEsport = tilEsport;
    this.toggleButton = toggleButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEventsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEventsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_events, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEventsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cercarFiltre;
      MaterialButton cercarFiltre = ViewBindings.findChildViewById(rootView, id);
      if (cercarFiltre == null) {
        break missingId;
      }

      id = R.id.ev_gratuit;
      MaterialButton evGratuit = ViewBindings.findChildViewById(rootView, id);
      if (evGratuit == null) {
        break missingId;
      }

      id = R.id.ev_pagament;
      MaterialButton evPagament = ViewBindings.findChildViewById(rootView, id);
      if (evPagament == null) {
        break missingId;
      }

      id = R.id.ev_totsDos;
      MaterialButton evTotsDos = ViewBindings.findChildViewById(rootView, id);
      if (evTotsDos == null) {
        break missingId;
      }

      id = R.id.recycler_events;
      RecyclerView recyclerEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerEvents == null) {
        break missingId;
      }

      id = R.id.resetFilter;
      MaterialButton resetFilter = ViewBindings.findChildViewById(rootView, id);
      if (resetFilter == null) {
        break missingId;
      }

      id = R.id.tie_dataFiltre;
      TextInputEditText tieDataFiltre = ViewBindings.findChildViewById(rootView, id);
      if (tieDataFiltre == null) {
        break missingId;
      }

      id = R.id.til_ciutat;
      TextInputEditText tilCiutat = ViewBindings.findChildViewById(rootView, id);
      if (tilCiutat == null) {
        break missingId;
      }

      id = R.id.til_dataFiltre;
      TextInputLayout tilDataFiltre = ViewBindings.findChildViewById(rootView, id);
      if (tilDataFiltre == null) {
        break missingId;
      }

      id = R.id.til_esport;
      TextInputEditText tilEsport = ViewBindings.findChildViewById(rootView, id);
      if (tilEsport == null) {
        break missingId;
      }

      id = R.id.toggleButton;
      MaterialButtonToggleGroup toggleButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleButton == null) {
        break missingId;
      }

      return new FragmentEventsBinding((LinearLayout) rootView, cercarFiltre, evGratuit, evPagament,
          evTotsDos, recyclerEvents, resetFilter, tieDataFiltre, tilCiutat, tilDataFiltre,
          tilEsport, toggleButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
